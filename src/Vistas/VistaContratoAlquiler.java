package Vistas;

import AccesoDatos.ContratoAlquilerData;
import AccesoDatos.EstadoContratoData;
import AccesoDatos.InquilinoData;
import AccesoDatos.PropiedadData;
import AccesoDatos.TipoLocalData;
import AccesoDatos.VendedorData;
import AccesoDatos.ZonaData;
import Entidades.ContratoAlquiler;
import Entidades.EstadoContrato;
import Entidades.Inquilino;
import Entidades.PropiedadInmueble;
import Entidades.TipoLocal;
import Entidades.Vendedor;
import Entidades.Zona;
import java.awt.Color;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kalema
 */
public class VistaContratoAlquiler extends javax.swing.JInternalFrame {

    public DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    public DefaultTableModel modeloBusqueda = new DefaultTableModel() {

        @Override
        public boolean isCellEditable(int fi, int col) {
            return false;
        }
    };

    private List<PropiedadInmueble> listaPropiedades = new ArrayList();
    private List<Inquilino> listaInqui = new ArrayList();
    private List<Vendedor> listaVend = new ArrayList();
    private List<EstadoContrato> listaEstCont = new ArrayList();
    private List<TipoLocal> listaTipoLocal = new ArrayList();
    private List<Zona> listaZonas = new ArrayList();
    private PropiedadInmueble lasProp = null;
    private Vendedor elVendedor = null;
    private Inquilino elInquilino = null;
    private ContratoAlquiler elContrato = null;
    private EstadoContrato elEstCont = null;
    private TipoLocal elTipoLocal = null;
    private Zona laZona = null;
    private PropiedadData abmPropiedadData = new PropiedadData();
    private ContratoAlquilerData abmContAlquiler = new ContratoAlquilerData();
    private VendedorData abmVend = new VendedorData();
    private InquilinoData abmInqui = new InquilinoData();
    private EstadoContratoData abmEstCont = new EstadoContratoData();
    private TipoLocalData abmTipoLocal = new TipoLocalData();
    private ZonaData abmZona = new ZonaData();
    private DefaultComboBoxModel modeloInquijcb = new DefaultComboBoxModel();
    private DefaultComboBoxModel modeloVen = new DefaultComboBoxModel();
    private DefaultComboBoxModel modeloEstCont = new DefaultComboBoxModel();
    private DefaultComboBoxModel modeloTipoLocal = new DefaultComboBoxModel();
    //Declaro los modelos de los combobox para la pestaña búsqueda por inquilinos
    private DefaultComboBoxModel busInquiModel = new DefaultComboBoxModel();
    private DefaultComboBoxModel busInquiVend = new DefaultComboBoxModel();
    private DefaultComboBoxModel busInquiEstCont = new DefaultComboBoxModel();
    private DefaultComboBoxModel busInquiTipoLocal = new DefaultComboBoxModel();

    private int vendjcb = 0;
    private boolean control = false;
    private boolean xInqui = false;

    /**
     * Creates new form ContratoAlquiler
     */
    public VistaContratoAlquiler() {
        initComponents();
        armoTablaProp();
        armoTablaBusquedaInqui();
        datosATabla();
        armoComboInqui();
        armoComboVend();
        armoComboEstCont();
        camposInicio();
        camposBusquedaInicial();
        armoComoTipo();
        InquiComboInqui();
        inquiComboEstCont();
        inquiComoTipo();
        inquiComboVend();
        armoLasZonas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPanelInquilino = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanelContratoPropiedad = new javax.swing.JPanel();
        omitirEtiqueta2 = new javax.swing.JLabel();
        jcbInquilinoProp = new javax.swing.JComboBox<>();
        jEtiquetaIDCont = new javax.swing.JLabel();
        jDiaInicio = new com.toedter.calendar.JDateChooser();
        omitirEtiqueta3 = new javax.swing.JLabel();
        omitirEtiqueta4 = new javax.swing.JLabel();
        jDiaFinal = new com.toedter.calendar.JDateChooser();
        omitirEtiqueta5 = new javax.swing.JLabel();
        jDiaRealizado = new com.toedter.calendar.JDateChooser();
        omitirEtiqueta6 = new javax.swing.JLabel();
        jcbComboVend = new javax.swing.JComboBox<>();
        omitirEtiqueta7 = new javax.swing.JLabel();
        jcbEstadoContrado = new javax.swing.JComboBox<>();
        jbtMoficarContrato = new javax.swing.JButton();
        lbtCancelarTodo = new javax.swing.JButton();
        jEtiquetaInicio = new javax.swing.JLabel();
        jcbTipoLocal = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jlOmitirIdProp = new javax.swing.JLabel();
        jlOmitirIdContrato = new javax.swing.JLabel();
        JEtiquetaIdProp = new javax.swing.JLabel();
        jEtiquetaTipoLocal = new javax.swing.JLabel();
        jEtiquetaVnededor = new javax.swing.JLabel();
        jEtiquetaEstadoContrato = new javax.swing.JLabel();
        jEtiquetaInquilino = new javax.swing.JLabel();
        jEtiquetaZona = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jEtiquetaZonaDesactivada = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaSeleccionPropiedad = new javax.swing.JTable();
        jPanelContratosxInquilinos = new javax.swing.JPanel();
        jOmitirInquilino = new javax.swing.JLabel();
        jcbxInquilinoNombre = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablaBusquedaxInquilino = new javax.swing.JTable();
        jEtiquetaxInquilino = new javax.swing.JLabel();
        lEtiquetaIdContratoOmitir = new javax.swing.JLabel();
        jEtiquetaIDPropiedadOmitir = new javax.swing.JLabel();
        jBusquedaFechaIni = new com.toedter.calendar.JDateChooser();
        jOmitirFechaInicio = new javax.swing.JLabel();
        jEtiquetaxFInicio = new javax.swing.JLabel();
        jOmitirFechaIFinal = new javax.swing.JLabel();
        jBusquedaFechaFin = new com.toedter.calendar.JDateChooser();
        jEtiquetaxFFinal = new javax.swing.JLabel();
        jOmitirFechaReali = new javax.swing.JLabel();
        jBusquedaFechaReali = new com.toedter.calendar.JDateChooser();
        jEtiquetaxFRealizacion = new javax.swing.JLabel();
        jOmitirxVendedor = new javax.swing.JLabel();
        jcbxInquilinoVendedor = new javax.swing.JComboBox<>();
        jOmitirxEstcontrato = new javax.swing.JLabel();
        jcbxInquilinoEstContrato = new javax.swing.JComboBox<>();
        jEtiquetaxVendedor = new javax.swing.JLabel();
        jEtiquetaxEstContrato = new javax.swing.JLabel();
        jbtBusquedaModificar = new javax.swing.JButton();
        jbtBusquedaCancelar = new javax.swing.JButton();
        jEtiquetaxEstadoCont = new javax.swing.JLabel();
        jOmitirTipoLocal = new javax.swing.JLabel();
        jcbxInquilinoTipoLocal = new javax.swing.JComboBox<>();
        jEtiquetaxTipoLocal = new javax.swing.JLabel();
        jEtiquetaIdContrato = new javax.swing.JLabel();
        jEtiquetaIDPropiedad = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jEtiquetaZonaxInqui = new javax.swing.JLabel();
        jEtiquetaxInquiZDesactiva = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPanelInquilino.setForeground(new java.awt.Color(153, 153, 153));

        jPanelContratoPropiedad.setBackground(new java.awt.Color(245, 232, 232));

        omitirEtiqueta2.setText("Inquilino");
        omitirEtiqueta2.setFocusable(false);

        jcbInquilinoProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbInquilinoPropActionPerformed(evt);
            }
        });

        jEtiquetaIDCont.setFocusable(false);

        jDiaInicio.setDateFormatString("yyyy-MM-dd");

        omitirEtiqueta3.setText("Fecha Inicio");
        omitirEtiqueta3.setFocusable(false);

        omitirEtiqueta4.setText("Fecha Final");
        omitirEtiqueta4.setFocusable(false);

        jDiaFinal.setDateFormatString("yyyy-MM-dd");

        omitirEtiqueta5.setText("Fecha Realizado");
        omitirEtiqueta5.setFocusable(false);

        jDiaRealizado.setDateFormatString("yyyy-MM-dd");

        omitirEtiqueta6.setText("Vendedor");
        omitirEtiqueta6.setFocusable(false);

        jcbComboVend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbComboVendActionPerformed(evt);
            }
        });

        omitirEtiqueta7.setText("Est. Contrato");
        omitirEtiqueta7.setFocusable(false);

        jcbEstadoContrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEstadoContradoActionPerformed(evt);
            }
        });

        jbtMoficarContrato.setText("Modificar");
        jbtMoficarContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtMoficarContratoActionPerformed(evt);
            }
        });

        lbtCancelarTodo.setText("Cancelar");
        lbtCancelarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbtCancelarTodoActionPerformed(evt);
            }
        });

        jcbTipoLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoLocalActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo Local");

        jlOmitirIdProp.setText("Id Propiedad");

        jlOmitirIdContrato.setText("Id Contrato");

        jLabel3.setText("Zona");

        jEtiquetaZonaDesactivada.setForeground(new java.awt.Color(153, 0, 51));

        javax.swing.GroupLayout jPanelContratoPropiedadLayout = new javax.swing.GroupLayout(jPanelContratoPropiedad);
        jPanelContratoPropiedad.setLayout(jPanelContratoPropiedadLayout);
        jPanelContratoPropiedadLayout.setHorizontalGroup(
            jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addComponent(omitirEtiqueta3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jEtiquetaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDiaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)))
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addComponent(omitirEtiqueta6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbComboVend, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jEtiquetaVnededor, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addComponent(jlOmitirIdContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEtiquetaIDCont, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlOmitirIdProp, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(JEtiquetaIdProp, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jcbInquilinoProp, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jEtiquetaInquilino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jEtiquetaTipoLocal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addComponent(omitirEtiqueta7)
                                .addGap(18, 18, 18)
                                .addComponent(jcbEstadoContrado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jEtiquetaEstadoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addComponent(omitirEtiqueta4)
                                .addGap(28, 28, 28)
                                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(omitirEtiqueta2)
                                    .addComponent(jDiaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jbtMoficarContrato)
                                .addGap(10, 10, 10)
                                .addComponent(lbtCancelarTodo)
                                .addGap(105, 105, 105))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelContratoPropiedadLayout.createSequentialGroup()
                                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelContratoPropiedadLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(omitirEtiqueta5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jDiaRealizado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelContratoPropiedadLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jEtiquetaZona, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(jEtiquetaZonaDesactivada, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanelContratoPropiedadLayout.setVerticalGroup(
            jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JEtiquetaIdProp, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlOmitirIdProp)
                        .addComponent(jEtiquetaIDCont, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jlOmitirIdContrato)
                        .addComponent(omitirEtiqueta2)
                        .addComponent(jcbInquilinoProp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jcbTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEtiquetaTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEtiquetaInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(omitirEtiqueta3)
                    .addComponent(jDiaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omitirEtiqueta4)
                    .addComponent(jDiaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(omitirEtiqueta5)
                    .addComponent(jDiaRealizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEtiquetaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(omitirEtiqueta6)
                            .addComponent(jcbComboVend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(omitirEtiqueta7)
                            .addComponent(jcbEstadoContrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEtiquetaZona, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jEtiquetaVnededor, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEtiquetaEstadoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelContratoPropiedadLayout.createSequentialGroup()
                        .addComponent(jEtiquetaZonaDesactivada, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(jPanelContratoPropiedadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtMoficarContrato)
                            .addComponent(lbtCancelarTodo))))
                .addContainerGap())
        );

        jTablaSeleccionPropiedad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablaSeleccionPropiedad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaSeleccionPropiedadMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablaSeleccionPropiedad);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 961, Short.MAX_VALUE)
                    .addComponent(jPanelContratoPropiedad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContratoPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPanelInquilino.addTab("Contratos por Propiedad", jPanel2);

        jPanelContratosxInquilinos.setBackground(new java.awt.Color(227, 255, 227));
        jPanelContratosxInquilinos.setFocusable(false);

        jOmitirInquilino.setText("Inquilino");

        jcbxInquilinoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbxInquilinoNombreActionPerformed(evt);
            }
        });

        jTablaBusquedaxInquilino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTablaBusquedaxInquilino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablaBusquedaxInquilinoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablaBusquedaxInquilino);

        lEtiquetaIdContratoOmitir.setForeground(new java.awt.Color(51, 51, 51));
        lEtiquetaIdContratoOmitir.setText("ID Contrato");
        lEtiquetaIdContratoOmitir.setFocusable(false);

        jEtiquetaIDPropiedadOmitir.setForeground(new java.awt.Color(51, 51, 51));
        jEtiquetaIDPropiedadOmitir.setText("ID Propiedad");
        jEtiquetaIDPropiedadOmitir.setFocusable(false);

        jBusquedaFechaIni.setDateFormatString("yyyy-MM-dd");

        jOmitirFechaInicio.setText("Fecha Inicio");
        jOmitirFechaInicio.setFocusable(false);

        jEtiquetaxFInicio.setFocusable(false);

        jOmitirFechaIFinal.setText("Fecha Final");
        jOmitirFechaIFinal.setFocusable(false);

        jBusquedaFechaFin.setDateFormatString("yyyy-MM-dd");

        jEtiquetaxFFinal.setFocusable(false);

        jOmitirFechaReali.setText("Fecha Realización");
        jOmitirFechaReali.setFocusable(false);

        jEtiquetaxFRealizacion.setFocusable(false);

        jOmitirxVendedor.setText("Vendedor");
        jOmitirxVendedor.setFocusable(false);

        jcbxInquilinoVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbxInquilinoVendedorActionPerformed(evt);
            }
        });

        jOmitirxEstcontrato.setText("Est. Contrato");

        jcbxInquilinoEstContrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbxInquilinoEstContratoActionPerformed(evt);
            }
        });

        jEtiquetaxVendedor.setFocusable(false);

        jEtiquetaxEstContrato.setFocusable(false);

        jbtBusquedaModificar.setText("Modificar");
        jbtBusquedaModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBusquedaModificarActionPerformed(evt);
            }
        });

        jbtBusquedaCancelar.setText("Cancelar");
        jbtBusquedaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBusquedaCancelarActionPerformed(evt);
            }
        });

        jOmitirTipoLocal.setText("Tipo Local");
        jOmitirTipoLocal.setFocusable(false);

        jcbxInquilinoTipoLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbxInquilinoTipoLocalActionPerformed(evt);
            }
        });

        jLabel4.setText("Zona");
        jLabel4.setFocusable(false);

        jEtiquetaxInquiZDesactiva.setForeground(new java.awt.Color(153, 0, 0));
        jEtiquetaxInquiZDesactiva.setFocusable(false);

        javax.swing.GroupLayout jPanelContratosxInquilinosLayout = new javax.swing.GroupLayout(jPanelContratosxInquilinos);
        jPanelContratosxInquilinos.setLayout(jPanelContratosxInquilinosLayout);
        jPanelContratosxInquilinosLayout.setHorizontalGroup(
            jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jEtiquetaxVendedor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelContratosxInquilinosLayout.createSequentialGroup()
                                        .addComponent(jOmitirxVendedor)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcbxInquilinoVendedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelContratosxInquilinosLayout.createSequentialGroup()
                                        .addComponent(jOmitirFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jBusquedaFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jEtiquetaxInquilino, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                        .addComponent(jOmitirInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jcbxInquilinoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                            .addComponent(jOmitirxEstcontrato)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jcbxInquilinoEstContrato, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(jEtiquetaxEstContrato)
                                        .addComponent(jEtiquetaxEstadoCont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jEtiquetaxFFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                                    .addComponent(jOmitirFechaIFinal)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(jBusquedaFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                        .addComponent(lEtiquetaIdContratoOmitir)
                                        .addGap(18, 18, 18)
                                        .addComponent(jEtiquetaIdContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jEtiquetaIDPropiedadOmitir))))
                            .addComponent(jEtiquetaxFInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jEtiquetaZonaxInqui, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jEtiquetaxInquiZDesactiva, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                    .addComponent(jOmitirFechaReali)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jBusquedaFechaReali, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContratosxInquilinosLayout.createSequentialGroup()
                                    .addComponent(jbtBusquedaModificar)
                                    .addGap(18, 18, 18)
                                    .addComponent(jbtBusquedaCancelar))
                                .addComponent(jEtiquetaxFRealizacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jEtiquetaxTipoLocal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                                    .addComponent(jOmitirTipoLocal)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jcbxInquilinoTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jEtiquetaIDPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelContratosxInquilinosLayout.setVerticalGroup(
            jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jOmitirInquilino)
                            .addComponent(jcbxInquilinoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lEtiquetaIdContratoOmitir)
                            .addComponent(jEtiquetaIdContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEtiquetaxInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jEtiquetaIDPropiedadOmitir)
                        .addComponent(jEtiquetaIDPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jBusquedaFechaReali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBusquedaFechaIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBusquedaFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOmitirFechaInicio)
                    .addComponent(jOmitirFechaIFinal)
                    .addComponent(jOmitirFechaReali))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jEtiquetaxFRealizacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEtiquetaxFFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEtiquetaxFInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOmitirxVendedor)
                    .addComponent(jcbxInquilinoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOmitirxEstcontrato)
                    .addComponent(jcbxInquilinoEstContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOmitirTipoLocal)
                    .addComponent(jcbxInquilinoTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEtiquetaxVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEtiquetaxEstContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEtiquetaxEstadoCont, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEtiquetaxTipoLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbtBusquedaModificar)
                            .addComponent(jbtBusquedaCancelar)))
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContratosxInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jEtiquetaZonaxInqui, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelContratosxInquilinosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEtiquetaxInquiZDesactiva, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPanelInquilino.addTab("Contratos Por Inquilino", jPanelContratosxInquilinos);

        jLabel1.setText("GESTIÓN DE CONTRATOS DE ALQUILER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPanelInquilino)
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPanelInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPanelInquilino.getAccessibleContext().setAccessibleName("separadorInquilino");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTablaSeleccionPropiedadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaSeleccionPropiedadMouseClicked
        // Cargo los datos de el contrato en los campos para la edición
        int valor = jTablaSeleccionPropiedad.getSelectedRow();
        int inquijcb = 0;
        String tomoInqui = String.valueOf(modelo.getValueAt(valor, 1));
        for (Inquilino unInqui : listaInqui) {
            if (unInqui.otraForma().equals(tomoInqui)) {
                inquijcb = unInqui.getIdInquilino() - 1;
            }
        }
        jcbInquilinoProp.setSelectedIndex(inquijcb);
        int tipolocaljcb = 0;
        String tomoTipoLocal = String.valueOf(modelo.getValueAt(valor, 2));
        for (TipoLocal tipoLocal : listaTipoLocal) {
            if (tipoLocal.getNombre().equals(tomoTipoLocal)) {
                tipolocaljcb = tipoLocal.getIdTipoLocal() - 1;
            }
        }
        jcbTipoLocal.setSelectedIndex(tipolocaljcb);
//        int vendjcb = 0;
        String tomoVend = String.valueOf(modelo.getValueAt(valor, 7));
        for (Vendedor esteVend : listaVend) {
            if (esteVend.toString().equals(tomoVend)) {
                jcbComboVend.setSelectedItem(esteVend.toString());
            }
        }
        //jcbComboVend.setSelectedIndex(vendjcb);
        int estContjcb = 0;
        String tomoEstCon = String.valueOf(modelo.getValueAt(valor, 8));
        for (EstadoContrato tomoEst : listaEstCont) {
            if (tomoEst.getNombre().equals(tomoEstCon)) {
                estContjcb = tomoEst.getIdEstadoContrato() - 1;
            }
        }
        jcbEstadoContrado.setSelectedIndex(estContjcb);
        jEtiquetaIDCont.setText(String.valueOf(modelo.getValueAt(valor, 0)));
        JEtiquetaIdProp.setText(String.valueOf(modelo.getValueAt(valor, 3)));
        jEtiquetaZona.setText(String.valueOf(modelo.getValueAt(valor, 9)));
        String tomoFechaIni = String.valueOf(modelo.getValueAt(valor, 4));
        String tomoFechaFin = String.valueOf(modelo.getValueAt(valor, 5));
        String tomoFechaReali = String.valueOf(modelo.getValueAt(valor, 6));
        SimpleDateFormat formatoFech = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date fechIni = formatoFech.parse(tomoFechaIni);
            Date fechFin = formatoFech.parse(tomoFechaFin);
            Date fechRea = formatoFech.parse(tomoFechaReali);
            jDiaInicio.setDate(fechIni);
            jDiaFinal.setDate(fechFin);
            jDiaRealizado.setDate(fechRea);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage());
        }

        for (Zona buscoZona : listaZonas) {
            if (buscoZona.getNombre().equals(jEtiquetaZona.getText())) {
                control = false;
                habilitoCampos(buscoZona.getIdZona());
            }
        }
    }//GEN-LAST:event_jTablaSeleccionPropiedadMouseClicked

    private void lbtCancelarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbtCancelarTodoActionPerformed
        // Deshabilito todos los campos para obligar a elegir otra propiedad de la tabla
        camposInicio();
    }//GEN-LAST:event_lbtCancelarTodoActionPerformed

    private void jbtMoficarContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtMoficarContratoActionPerformed
        // Tomo los datos de los campos y actualizo la base
        borrarFilas();
        int elValorInqui = jcbInquilinoProp.getSelectedIndex() + 1;
        elInquilino = abmInqui.buscoInquilino(elValorInqui);
        //System.out.println("Muestro el valor de tomoVend "+vendjcb);
        Date fInicial = jDiaInicio.getDate();
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String castIni = formato.format(fInicial);
        LocalDate fechaIni = LocalDate.parse(castIni);
        Date fFinal = jDiaFinal.getDate();
        String castFin = formato.format(fFinal);
        LocalDate fechaFin = LocalDate.parse(castFin);
        Date fRealizado = jDiaRealizado.getDate();
        String castReal = formato.format(fRealizado);
        LocalDate fechaReali = LocalDate.parse(castReal);
        //Evaluo las fechas para que sean concistentes 
        if (!fechaIni.isAfter(fechaFin) || !fechaIni.equals(fechaFin)) {
            if (!fechaFin.isAfter(fechaReali)) {
                JOptionPane.showMessageDialog(this, "La Fecha de finalización no puede ser\n posterior a la de Realización");
            } else {
                elInquilino = abmInqui.buscoInquilino(jcbInquilinoProp.getSelectedIndex() + 1);
                lasProp = abmPropiedadData.buscarPropiedadPorId(Integer.parseInt(JEtiquetaIdProp.getText()));
                elVendedor = abmVend.buscoVendedor(jcbComboVend.getSelectedIndex() + 1);
                elEstCont = abmEstCont.BuscarEstadoContratoPorId(jcbEstadoContrado.getSelectedIndex() + 1);

                //Verifico si la zona de la propiedad esta activa
                //if (lasProp.getZona().isEstado()) {
                //Construyo el Contrato Alquiler para actualizar
                elContrato = new ContratoAlquiler();
                elContrato.setIdContratoAlquiler(Integer.parseInt(jEtiquetaIDCont.getText()));
                elContrato.setInquilino(elInquilino);
                elContrato.setPropiedadInmueble(lasProp);
                elContrato.setFechaInicio(fechaIni);
                elContrato.setFechaFinal(fechaFin);
                elContrato.setFechaRealizacion(fechaReali);
                elContrato.getMarca();
                elContrato.setVendedor(elVendedor);
                elContrato.setEstado(elEstCont);
                abmContAlquiler.modificarContrato(elContrato);
                System.out.println("el primer valor de el vendedor " + elVendedor.getIdVendedor());
                //System.out.println("El segundo valor de el vendedor "+vendjcb);
                abmVend.actualizarCantidadVentas(elVendedor.getIdVendedor());
                //abmVend.actualizarCantidadVentas(vendjcb);
//                } else {
//                    JOptionPane.showMessageDialog(null, "Este Contrato No Se Puede Modificar.\n"
//                            + " La Zona En La Que Se Encuentra Esta dada De Baja");
//                }
            }

            datosATabla();
            camposInicio();
        } else {
            JOptionPane.showMessageDialog(this, "La fecha de Inicio no puede ser posterior\n a la de "
                    + "Finalzación ");
        }
    }//GEN-LAST:event_jbtMoficarContratoActionPerformed

    private void jcbTipoLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoLocalActionPerformed
        // chequeo que no se seleccione la opción "Seleccione..."
        if (jcbTipoLocal.getSelectedIndex() == 0) {
            jEtiquetaTipoLocal.setText("Debe seleccionar una opción");
            jEtiquetaTipoLocal.setFont(new Font("LiberationSans", Font.PLAIN, 13));
            jEtiquetaTipoLocal.setForeground(Color.red.darker());
            jcbInquilinoProp.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jcbComboVend.setEnabled(false);
            jcbEstadoContrado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);

        } else {
            jEtiquetaTipoLocal.setText("");
            jcbInquilinoProp.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jcbComboVend.setEnabled(true);
            jcbEstadoContrado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        }
    }//GEN-LAST:event_jcbTipoLocalActionPerformed

    private void jcbComboVendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbComboVendActionPerformed
        // chequeo que no se seleccione la opción "Seleccione..."
        if (jcbComboVend.getSelectedIndex() == 0) {
            jEtiquetaVnededor.setText("Debe seleccionar una opción");
            jEtiquetaVnededor.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
            jEtiquetaVnededor.setForeground(Color.red.darker());
            jcbInquilinoProp.setEnabled(false);
            jcbTipoLocal.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jcbEstadoContrado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);
        } else {
            jEtiquetaVnededor.setText("");
            jcbInquilinoProp.setEnabled(true);
            jcbTipoLocal.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jcbEstadoContrado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        }
    }//GEN-LAST:event_jcbComboVendActionPerformed

    private void jcbEstadoContradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEstadoContradoActionPerformed
        // chequeo que no se seleccione la opción "Seleccione..."
        if (control) {
            if (jcbEstadoContrado.getSelectedIndex() != 3) {
                jEtiquetaEstadoContrato.setText("Debe Anular el contrato");
                jEtiquetaEstadoContrato.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
                jEtiquetaEstadoContrato.setForeground(Color.red.darker());
            } else {
                jbtMoficarContrato.setEnabled(true);
                jEtiquetaEstadoContrato.setText("");
            }
        } else {
            if (jcbEstadoContrado.getSelectedIndex() == 0) {
                jEtiquetaEstadoContrato.setText("Debe seleccionar una opción");
                jEtiquetaEstadoContrato.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
                jEtiquetaEstadoContrato.setForeground(Color.red.darker());
                jcbInquilinoProp.setEnabled(false);
                jcbTipoLocal.setEnabled(false);
                jcbComboVend.setEnabled(false);
                jDiaInicio.setEnabled(false);
                jDiaFinal.setEnabled(false);
                jDiaRealizado.setEnabled(false);
                jbtMoficarContrato.setEnabled(false);
            } else {
                jEtiquetaEstadoContrato.setText("");
                jcbInquilinoProp.setEnabled(true);
                jcbTipoLocal.setEnabled(true);
                jcbComboVend.setEnabled(true);
                jDiaInicio.setEnabled(true);
                jDiaFinal.setEnabled(true);
                jDiaRealizado.setEnabled(true);
                jbtMoficarContrato.setEnabled(true);
            }
        }

    }//GEN-LAST:event_jcbEstadoContradoActionPerformed

    private void jcbInquilinoPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbInquilinoPropActionPerformed
        // chequeo que se seleccione una opción válida
        if (jcbInquilinoProp.getSelectedIndex() == 0) {
            jEtiquetaInquilino.setText("Debe seleccionar una opción");
            jEtiquetaInquilino.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
            jEtiquetaInquilino.setForeground(Color.red.darker());
            jcbTipoLocal.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jcbComboVend.setEnabled(false);
            jcbEstadoContrado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);
        } else {
            jEtiquetaInquilino.setText("");
            jcbTipoLocal.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jcbComboVend.setEnabled(true);
            jcbEstadoContrado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        }
    }//GEN-LAST:event_jcbInquilinoPropActionPerformed

    private void jcbxInquilinoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbxInquilinoNombreActionPerformed
        // Obligo q elegir una opción válida
        if (jcbxInquilinoNombre.getSelectedIndex() == 0) {
            jEtiquetaxInquilino.setText("Debe elegir una opción");
            jEtiquetaxInquilino.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
            jEtiquetaxInquilino.setForeground(Color.red.darker());
            camposBusquedaInicial();
            borroFilasBusqueda();
        } else {
            borroFilasBusqueda();
            jEtiquetaxInquilino.setText("");
            int valorInqui = jcbxInquilinoNombre.getSelectedIndex() + 1;
            List<ContratoAlquiler> listContratos = abmContAlquiler.listarContrato();
            for (ContratoAlquiler listContrato : listContratos) {
                if (listContrato.getInquilino().getIdInquilino() == valorInqui) {
                    modeloBusqueda.addRow(new Object[]{listContrato.getIdContratoAlquiler(), listContrato.getInquilino().otraForma(),
                        listContrato.getPropiedadInmueble().getTipoLocal().getNombre(), listContrato.getPropiedadInmueble().getIdPropiedadInmueble(),
                        listContrato.getFechaInicio(), listContrato.getFechaFinal(), listContrato.getFechaRealizacion(), listContrato.getVendedor().toString(),
                        listContrato.getEstado().getNombre(), listContrato.getPropiedadInmueble().getZona().getNombre()});
                }
            }
        }
    }//GEN-LAST:event_jcbxInquilinoNombreActionPerformed

    private void jTablaBusquedaxInquilinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablaBusquedaxInquilinoMouseClicked
        // Cargo los datos de la tabla en los campos correspondientes
        int valorFila = jTablaBusquedaxInquilino.getSelectedRow();
        xInqui = false;
        //Busco el vendedor
        //Vendedor temp= new Vendedor();
        String cadenaVend = String.valueOf(modeloBusqueda.getValueAt(valorFila, 7));
        for (Vendedor elVen : listaVend) {
            if (elVen.toString().equals(cadenaVend)) {
                jcbxInquilinoVendedor.setSelectedItem(elVen.toString());
            }
        }

        //Busco el valor de el Estado Contrato
        int jcbValorEstCont = 0;
        String cadenaEstCont = String.valueOf(modeloBusqueda.getValueAt(valorFila, 8));
        for (EstadoContrato elEstCont : listaEstCont) {
            //System.out.println("a ver dentro de el for el valur de el nombre " + elEstCont.getNombre());
            if (elEstCont.getNombre().equals(cadenaEstCont)) {
                jcbValorEstCont = elEstCont.getIdEstadoContrato() - 1;
            }
        }
        jcbxInquilinoEstContrato.setSelectedIndex(jcbValorEstCont);
        //Busco el valor de Tipo Local
        int jcbValorTipo = 0;
        String cadenaTipo = String.valueOf(modeloBusqueda.getValueAt(valorFila, 2));
        for (TipoLocal elTipo : listaTipoLocal) {
            if (elTipo.getNombre().equals(cadenaTipo)) {
                jcbValorTipo = elTipo.getIdTipoLocal() - 1;
            }
        }
        jcbxInquilinoTipoLocal.setSelectedIndex(jcbValorTipo);
        //Armo los valores de fechas
        String iniFecha = String.valueOf(modeloBusqueda.getValueAt(valorFila, 4));
        String finFecha = String.valueOf(modeloBusqueda.getValueAt(valorFila, 5));
        String realiFecha = String.valueOf(modeloBusqueda.getValueAt(valorFila, 6));
        SimpleDateFormat formoFecha = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date fInicial = formoFecha.parse(iniFecha);
            Date fFinal = formoFecha.parse(finFecha);
            Date fReali = formoFecha.parse(realiFecha);
            jBusquedaFechaIni.setDate(fInicial);
            jBusquedaFechaFin.setDate(fFinal);
            jBusquedaFechaReali.setDate(fReali);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Error " + e.getMessage());
        }
        jEtiquetaIdContrato.setText(String.valueOf(modeloBusqueda.getValueAt(valorFila, 0)));
        jEtiquetaIDPropiedad.setText(String.valueOf(modeloBusqueda.getValueAt(valorFila, 3)));
        jEtiquetaZonaxInqui.setText(String.valueOf(modeloBusqueda.getValueAt(valorFila, 9)));

        for (Zona inquiZ : listaZonas) {
            if (inquiZ.getNombre().equals(jEtiquetaZonaxInqui.getText())) {
                if (inquiZ.isEstado()) {
                    jEtiquetaxInquiZDesactiva.setText("");
                    jbtBusquedaModificar.setEnabled(true);
                    jBusquedaFechaIni.setEnabled(true);
                    jBusquedaFechaFin.setEnabled(true);
                    jBusquedaFechaReali.setEnabled(true);
                    jcbxInquilinoVendedor.setEnabled(true);
                    jcbxInquilinoEstContrato.setEnabled(true);
                    jcbxInquilinoTipoLocal.setEnabled(true);
                    
                } else {
                    jEtiquetaxInquiZDesactiva.setText("Desactivada");
                    jbtBusquedaModificar.setEnabled(false);
                    jBusquedaFechaIni.setEnabled(false);
                    jBusquedaFechaFin.setEnabled(false);
                    jBusquedaFechaReali.setEnabled(false);
                    jcbxInquilinoVendedor.setEnabled(false);
                    jcbxInquilinoEstContrato.setEnabled(true);
                    jcbxInquilinoTipoLocal.setEnabled(false);
                    xInqui = true;
                }
            }
        }

        camposInicio();

    }//GEN-LAST:event_jTablaBusquedaxInquilinoMouseClicked

    private void jbtBusquedaModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBusquedaModificarActionPerformed
        // Guardo los valores de los campos en la base de datos
        //Empiezo formateando las fechas
        SimpleDateFormat formoDia = new SimpleDateFormat("yyyy-MM-dd");
        Date xFechaIni = jBusquedaFechaIni.getDate();
        String xIni = formoDia.format(xFechaIni);
        LocalDate xDiaInicial = LocalDate.parse(xIni);
        Date xFechaFin = jBusquedaFechaFin.getDate();
        String xFin = formoDia.format(xFechaFin);
        LocalDate xfin = LocalDate.parse(xFin);
        Date xFechaReali = jBusquedaFechaReali.getDate();
        String xR = formoDia.format(xFechaReali);
        LocalDate xReali = LocalDate.parse(xR);
        //Armo los datos de el combo Vendedor
        Vendedor tempV = new Vendedor();
        for (Vendedor vende : listaVend) {
            if (vende.toString().equals(jcbxInquilinoVendedor.getSelectedItem())) {
                tempV = vende;
            }
        }
        //Evaluo el orden de las fechas
        if (!xDiaInicial.isAfter(xfin) || !xDiaInicial.equals(xfin)) {
            if (!xfin.isAfter(xReali)) {
                JOptionPane.showMessageDialog(this, "La fecha de Finalización no\n puede ser posterior a la de Realización");
            } else {
                //Las fechas son correctas. Empiezo a construir el objeto para mandar a el procedimiento de modificación
                elInquilino = abmInqui.buscoInquilino(jcbxInquilinoNombre.getSelectedIndex() + 1);
                lasProp = abmPropiedadData.buscarPropiedadPorId(Integer.parseInt(jEtiquetaIDPropiedad.getText()));
                elVendedor = abmVend.buscoVendedor(tempV.getIdVendedor());
                elEstCont = abmEstCont.BuscarEstadoContratoPorId(jcbxInquilinoEstContrato.getSelectedIndex() + 1);
                elTipoLocal = abmTipoLocal.buscoTipoLocal(jcbxInquilinoTipoLocal.getSelectedIndex() + 1);
                elContrato = new ContratoAlquiler();
                elContrato.setIdContratoAlquiler(Integer.parseInt(jEtiquetaIdContrato.getText()));
                elContrato.setInquilino(elInquilino);
                elContrato.setPropiedadInmueble(lasProp);
                elContrato.setFechaInicio(xDiaInicial);
                elContrato.setFechaFinal(xfin);
                elContrato.setFechaRealizacion(xReali);
                elContrato.getMarca();
                elContrato.setVendedor(elVendedor);
                elContrato.setEstado(elEstCont);
                abmContAlquiler.modificarContrato(elContrato);
                abmVend.actualizarCantidadVentas(elVendedor.getIdVendedor());
            }
        } else {
            JOptionPane.showMessageDialog(this, "La fecha de inicio no puede ser posterior\n ni igual a la fecha de finalización");
        }
        borroFilasBusqueda();
        jEtiquetaxInquilino.setText("");
        int valorInqui = jcbxInquilinoNombre.getSelectedIndex() + 1;
        List<ContratoAlquiler> listContratos = abmContAlquiler.listarContrato();
        for (ContratoAlquiler listContrato : listContratos) {
            if (listContrato.getInquilino().getIdInquilino() == valorInqui) {
                modeloBusqueda.addRow(new Object[]{listContrato.getIdContratoAlquiler(), listContrato.getInquilino().otraForma(),
                    listContrato.getPropiedadInmueble().getTipoLocal().getNombre(), listContrato.getPropiedadInmueble().getIdPropiedadInmueble(),
                    listContrato.getFechaInicio(), listContrato.getFechaFinal(), listContrato.getFechaRealizacion(), listContrato.getVendedor().toString(),
                    listContrato.getEstado().getNombre(), listContrato.getPropiedadInmueble().getZona().getNombre()});
            }
        }
    }//GEN-LAST:event_jbtBusquedaModificarActionPerformed

    private void jcbxInquilinoVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbxInquilinoVendedorActionPerformed
        // No permito que no se elija una opción válida
        if (jcbxInquilinoVendedor.getSelectedIndex() == 0) {
            jcbxInquilinoNombre.setEnabled(false);
            jBusquedaFechaIni.setEnabled(false);
            jBusquedaFechaFin.setEnabled(false);
            jBusquedaFechaReali.setEnabled(false);
            jcbxInquilinoEstContrato.setEnabled(false);
            jcbxInquilinoTipoLocal.setEnabled(false);
            jbtBusquedaModificar.setEnabled(false);
            jEtiquetaxVendedor.setText("Debe elegir una opción válida");
            jEtiquetaxVendedor.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
            jEtiquetaxVendedor.setForeground(Color.red.darker());
        } else {
            jcbxInquilinoNombre.setEnabled(true);
            jBusquedaFechaIni.setEnabled(true);
            jBusquedaFechaFin.setEnabled(true);
            jBusquedaFechaReali.setEnabled(true);
            jcbxInquilinoEstContrato.setEnabled(true);
            jcbxInquilinoTipoLocal.setEnabled(true);
            jbtBusquedaModificar.setEnabled(true);
            jEtiquetaxVendedor.setText("");
        }
    }//GEN-LAST:event_jcbxInquilinoVendedorActionPerformed

    private void jcbxInquilinoEstContratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbxInquilinoEstContratoActionPerformed
        // No permito que no se elija una opción válida
        if (xInqui) {
            if (jcbxInquilinoEstContrato.getSelectedIndex() != 3 || jcbxInquilinoEstContrato.getSelectedIndex() == 0) {
                jEtiquetaxEstContrato.setText("Debe Anular el contrato");
                jEtiquetaxEstContrato.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
                jEtiquetaxEstContrato.setForeground(Color.red.darker());
            } else {
                jEtiquetaxEstContrato.setText("");
                jbtBusquedaModificar.setEnabled(true);
            }
        } else {
            if (jcbxInquilinoEstContrato.getSelectedIndex() == 0) {
                jcbxInquilinoNombre.setEnabled(false);
                jBusquedaFechaIni.setEnabled(false);
                jBusquedaFechaFin.setEnabled(false);
                jBusquedaFechaReali.setEnabled(false);
                jcbxInquilinoVendedor.setEnabled(false);
                jcbxInquilinoTipoLocal.setEnabled(false);
                jbtBusquedaModificar.setEnabled(false);
                jEtiquetaxEstContrato.setText("Debe elegir una opción válida");
                jEtiquetaxEstContrato.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
                jEtiquetaxEstContrato.setForeground(Color.red.darker());
            } else {
                jcbxInquilinoNombre.setEnabled(true);
                jBusquedaFechaIni.setEnabled(true);
                jBusquedaFechaFin.setEnabled(true);
                jBusquedaFechaReali.setEnabled(true);
                jcbxInquilinoVendedor.setEnabled(true);
                jcbxInquilinoTipoLocal.setEnabled(true);
                jbtBusquedaModificar.setEnabled(true);
                jEtiquetaxEstContrato.setText("");
            }
        }

    }//GEN-LAST:event_jcbxInquilinoEstContratoActionPerformed

    private void jcbxInquilinoTipoLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbxInquilinoTipoLocalActionPerformed
        // No permito que no se elija una opción válida
        if (jcbxInquilinoTipoLocal.getSelectedIndex() == 0) {
            jcbxInquilinoNombre.setEnabled(false);
            jBusquedaFechaIni.setEnabled(false);
            jBusquedaFechaFin.setEnabled(false);
            jBusquedaFechaReali.setEnabled(false);
            jcbxInquilinoVendedor.setEnabled(false);
            jcbxInquilinoEstContrato.setEnabled(false);
            jbtBusquedaModificar.setEnabled(false);
            jEtiquetaxTipoLocal.setText("Debe elegir una opción válida");
            jEtiquetaxTipoLocal.setFont(new Font("Liberation Sans", Font.PLAIN, 13));
            jEtiquetaxTipoLocal.setForeground(Color.red.darker());
        } else {
            jcbxInquilinoNombre.setEnabled(true);
            jBusquedaFechaIni.setEnabled(true);
            jBusquedaFechaFin.setEnabled(true);
            jBusquedaFechaReali.setEnabled(true);
            jcbxInquilinoVendedor.setEnabled(true);
            jcbxInquilinoEstContrato.setEnabled(true);
            jbtBusquedaModificar.setEnabled(true);
            jEtiquetaxTipoLocal.setText("");
        }
    }//GEN-LAST:event_jcbxInquilinoTipoLocalActionPerformed

    private void jbtBusquedaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBusquedaCancelarActionPerformed
        // Reseteo la tabla y bloqueo los campos para la edición
        borroFilasBusqueda();
        camposBusquedaInicial();
    }//GEN-LAST:event_jbtBusquedaCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JEtiquetaIdProp;
    private com.toedter.calendar.JDateChooser jBusquedaFechaFin;
    private com.toedter.calendar.JDateChooser jBusquedaFechaIni;
    private com.toedter.calendar.JDateChooser jBusquedaFechaReali;
    private com.toedter.calendar.JDateChooser jDiaFinal;
    private com.toedter.calendar.JDateChooser jDiaInicio;
    private com.toedter.calendar.JDateChooser jDiaRealizado;
    private javax.swing.JLabel jEtiquetaEstadoContrato;
    private javax.swing.JLabel jEtiquetaIDCont;
    private javax.swing.JLabel jEtiquetaIDPropiedad;
    private javax.swing.JLabel jEtiquetaIDPropiedadOmitir;
    private javax.swing.JLabel jEtiquetaIdContrato;
    private javax.swing.JLabel jEtiquetaInicio;
    private javax.swing.JLabel jEtiquetaInquilino;
    private javax.swing.JLabel jEtiquetaTipoLocal;
    private javax.swing.JLabel jEtiquetaVnededor;
    private javax.swing.JLabel jEtiquetaZona;
    private javax.swing.JLabel jEtiquetaZonaDesactivada;
    private javax.swing.JLabel jEtiquetaZonaxInqui;
    private javax.swing.JLabel jEtiquetaxEstContrato;
    private javax.swing.JLabel jEtiquetaxEstadoCont;
    private javax.swing.JLabel jEtiquetaxFFinal;
    private javax.swing.JLabel jEtiquetaxFInicio;
    private javax.swing.JLabel jEtiquetaxFRealizacion;
    private javax.swing.JLabel jEtiquetaxInquiZDesactiva;
    private javax.swing.JLabel jEtiquetaxInquilino;
    private javax.swing.JLabel jEtiquetaxTipoLocal;
    private javax.swing.JLabel jEtiquetaxVendedor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jOmitirFechaIFinal;
    private javax.swing.JLabel jOmitirFechaInicio;
    private javax.swing.JLabel jOmitirFechaReali;
    private javax.swing.JLabel jOmitirInquilino;
    private javax.swing.JLabel jOmitirTipoLocal;
    private javax.swing.JLabel jOmitirxEstcontrato;
    private javax.swing.JLabel jOmitirxVendedor;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelContratoPropiedad;
    private javax.swing.JPanel jPanelContratosxInquilinos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPanelInquilino;
    private javax.swing.JTable jTablaBusquedaxInquilino;
    private javax.swing.JTable jTablaSeleccionPropiedad;
    private javax.swing.JButton jbtBusquedaCancelar;
    private javax.swing.JButton jbtBusquedaModificar;
    private javax.swing.JButton jbtMoficarContrato;
    private javax.swing.JComboBox<String> jcbComboVend;
    private javax.swing.JComboBox<String> jcbEstadoContrado;
    private javax.swing.JComboBox<String> jcbInquilinoProp;
    private javax.swing.JComboBox<String> jcbTipoLocal;
    private javax.swing.JComboBox<String> jcbxInquilinoEstContrato;
    private javax.swing.JComboBox<String> jcbxInquilinoNombre;
    private javax.swing.JComboBox<String> jcbxInquilinoTipoLocal;
    private javax.swing.JComboBox<String> jcbxInquilinoVendedor;
    private javax.swing.JLabel jlOmitirIdContrato;
    private javax.swing.JLabel jlOmitirIdProp;
    private javax.swing.JLabel lEtiquetaIdContratoOmitir;
    private javax.swing.JButton lbtCancelarTodo;
    private javax.swing.JLabel omitirEtiqueta2;
    private javax.swing.JLabel omitirEtiqueta3;
    private javax.swing.JLabel omitirEtiqueta4;
    private javax.swing.JLabel omitirEtiqueta5;
    private javax.swing.JLabel omitirEtiqueta6;
    private javax.swing.JLabel omitirEtiqueta7;
    // End of variables declaration//GEN-END:variables

    private void cargoPropiedades() {
        listaPropiedades = abmPropiedadData.buscarPropiedad();
        for (PropiedadInmueble prop : listaPropiedades) {

        }
    }

    private void armoTablaProp() {
        modelo.addColumn("ID Contrato"); //0
        modelo.addColumn("Inquilino");  //1
        modelo.addColumn("Tipo Local"); //2
        modelo.addColumn("Id Propiedad");   //3
        modelo.addColumn("Fecha de Inicio");    //4
        modelo.addColumn("Fecha Final");    //5
        modelo.addColumn("Fecha Realización");  //6
        modelo.addColumn("Vendedor");   //7
        modelo.addColumn("Estado Contrato");    //8
        modelo.addColumn("Zona"); //9
        jTablaSeleccionPropiedad.setModel(modelo);
    }

    private void armoTablaBusquedaInqui() {
        modeloBusqueda.addColumn("ID Contrato"); //0
        modeloBusqueda.addColumn("Inquilino");  //1
        modeloBusqueda.addColumn("Tipo Local"); //2
        modeloBusqueda.addColumn("Id Propiedad");   //3
        modeloBusqueda.addColumn("Fecha de Inicio");    //4
        modeloBusqueda.addColumn("Fecha Final");    //5
        modeloBusqueda.addColumn("Fecha Realización");  //6
        modeloBusqueda.addColumn("Vendedor");   //7
        modeloBusqueda.addColumn("Estado Contrato");    //8
        modeloBusqueda.addColumn("Zona"); //9
        jTablaBusquedaxInquilino.setModel(modeloBusqueda);
    }

    private void datosATabla() {
        List<ContratoAlquiler> listar = new ArrayList();
        listar = abmContAlquiler.listarContrato();

        for (ContratoAlquiler cont : listar) {
            //elInquilino = abmInqui.buscoInquilino(con)
            modelo.addRow(new Object[]{cont.getIdContratoAlquiler(), cont.getInquilino().otraForma(),
                cont.getPropiedadInmueble().getTipoLocal().getNombre(), cont.getPropiedadInmueble().getIdPropiedadInmueble(),
                cont.getFechaInicio(), cont.getFechaFinal(), cont.getFechaRealizacion(), cont.getVendedor().toString(),
                cont.getEstado().getNombre(), cont.getPropiedadInmueble().getZona().getNombre()});
        }
    }

    private void borrarFilas() {
        int f = modelo.getRowCount() - 1;
        for (int i = f; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void borroFilasBusqueda() {
        int fila = modeloBusqueda.getRowCount() - 1;
        for (int i = fila; i >= 0; i--) {
            modeloBusqueda.removeRow(i);
        }
    }

    private void armoComboInqui() {
        listaInqui = abmInqui.listarInquilino();
        for (Inquilino inqui : listaInqui) {
            modeloInquijcb.addElement(inqui.otraForma());
        }
        jcbInquilinoProp.setModel(modeloInquijcb);
        jcbxInquilinoNombre.setModel(modeloInquijcb);
    }

    private void InquiComboInqui() {
        listaInqui = abmInqui.listarInquilino();
        for (Inquilino inqui : listaInqui) {
            busInquiModel.addElement(inqui.otraForma());
        }
        jcbxInquilinoNombre.setModel(busInquiModel);
    }

    private void armoComoTipo() {
        listaTipoLocal = abmTipoLocal.listarTipoLocal();
        for (TipoLocal tipoLocal : listaTipoLocal) {
            modeloTipoLocal.addElement(tipoLocal.getNombre());
        }
        jcbTipoLocal.setModel(modeloTipoLocal);
        jcbxInquilinoTipoLocal.setModel(modeloTipoLocal);
    }

    private void inquiComoTipo() {
        listaTipoLocal = abmTipoLocal.listarTipoLocal();
        for (TipoLocal tipoLocal : listaTipoLocal) {
            busInquiTipoLocal.addElement(tipoLocal.getNombre());
        }
        jcbxInquilinoTipoLocal.setModel(busInquiTipoLocal);
    }

    private void armoComboVend() {
        listaVend = abmVend.listadoVendedorOriginal();
        for (Vendedor unVend : listaVend) {
            if (unVend.isEstado()) {
                modeloVen.addElement(unVend.toString());
            }
        }
        jcbComboVend.setModel(modeloVen);
        jcbxInquilinoVendedor.setModel(modeloVen);
    }

    private void inquiComboVend() {
        listaVend = abmVend.listadoVendedorOriginal();
        for (Vendedor unVend : listaVend) {
            if (unVend.isEstado()) {
                busInquiVend.addElement(unVend.toString());
            }
        }
        jcbxInquilinoVendedor.setModel(busInquiVend);
    }

    private void armoComboEstCont() {
        listaEstCont = abmEstCont.listarEstadoContratos();
        for (EstadoContrato unEst : listaEstCont) {
            modeloEstCont.addElement(unEst.getNombre());
        }
        jcbEstadoContrado.setModel(modeloEstCont);
        jcbxInquilinoEstContrato.setModel(modeloEstCont);
    }

    private void inquiComboEstCont() {
        listaEstCont = abmEstCont.listarEstadoContratos();
        for (EstadoContrato unEst : listaEstCont) {
            busInquiEstCont.addElement(unEst.getNombre());
        }
        jcbxInquilinoEstContrato.setModel(busInquiEstCont);
    }

    private void armoLasZonas() {
        // Busco las zonas para después chequear si está habilitada
        listaZonas = abmZona.listarZonas();
    }

    private void camposInicio() {
        jcbInquilinoProp.setEnabled(false);
        jcbTipoLocal.setEnabled(false);
        jcbComboVend.setEnabled(false);
        jcbEstadoContrado.setEnabled(false);
        jDiaInicio.setEnabled(false);
        jDiaFinal.setEnabled(false);
        jDiaRealizado.setEnabled(false);
        jbtMoficarContrato.setEnabled(false);
    }

    private void habilitoCampos(int unaZona) {
        Zona tempZ = new Zona();
        tempZ = abmZona.buscarZona(unaZona);
        if (tempZ.isEstado()) {
            jEtiquetaZonaDesactivada.setText("");
            jcbInquilinoProp.setEnabled(true);
            jcbTipoLocal.setEnabled(true);
            jcbComboVend.setEnabled(true);
            jcbEstadoContrado.setEnabled(true);
            jDiaInicio.setEnabled(true);
            jDiaFinal.setEnabled(true);
            jDiaRealizado.setEnabled(true);
            jbtMoficarContrato.setEnabled(true);
        } else {
            jEtiquetaZonaDesactivada.setText("Desactivada");
            jbtMoficarContrato.setEnabled(false);
            jcbInquilinoProp.setEnabled(false);
            jcbTipoLocal.setEnabled(false);
            jcbComboVend.setEnabled(false);
            jDiaInicio.setEnabled(false);
            jDiaFinal.setEnabled(false);
            jDiaRealizado.setEnabled(false);
            jbtMoficarContrato.setEnabled(false);
            control = true;
        }

    }

    private void camposBusquedaInicial() {
        jBusquedaFechaIni.setEnabled(false);
        jBusquedaFechaFin.setEnabled(false);
        jBusquedaFechaReali.setEnabled(false);
        jcbxInquilinoVendedor.setEnabled(false);
        jcbxInquilinoEstContrato.setEnabled(false);
        jcbxInquilinoTipoLocal.setEnabled(false);
        jbtBusquedaModificar.setEnabled(false);
//        jEtiquetaxInquilino.setText("");
//        jEtiquetaxFInicio.setText("");
//        jEtiquetaxFFinal.setText("");
//        jEtiquetaxFRealizacion.setText("");
//        jEtiquetaxVendedor.setText("");
//        jEtiquetaxEstadoCont.setText("");
//        jEtiquetaxTipoLocal.setText("");
    }
}
