/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import AccesoDatos.ZonaData;
import Entidades.Zona;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manuv
 */
public class GestionZonas extends javax.swing.JInternalFrame {

    DefaultTableModel modeloTabla = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int f, int c){
            return false;
        }
        
    };
    
    boolean seEstaModificando = false;
    int Indice;
    
    
    public GestionZonas() {
        
        initComponents();
        armarTabla();
        inicializarCampos();
        cargarTabla();
        ModificandoMensaje.setForeground(Color.red);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        AgregarZona = new javax.swing.JButton();
        ModificarZona = new javax.swing.JButton();
        CambiarEstado = new javax.swing.JButton();
        ModificandoMensaje = new javax.swing.JLabel();
        CancelarModificacion = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Gestion de Zonas");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jLabel2.setText("Ingrese nombre de la zona");

        jtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtNombreActionPerformed(evt);
            }
        });
        jtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtNombreKeyReleased(evt);
            }
        });

        jtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtDescripcionKeyReleased(evt);
            }
        });

        jLabel3.setText("Localidad");

        AgregarZona.setText("Agregar Zona");
        AgregarZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarZonaActionPerformed(evt);
            }
        });

        ModificarZona.setText("Modificar");
        ModificarZona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarZonaActionPerformed(evt);
            }
        });

        CambiarEstado.setText("Cambiar Estado");
        CambiarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarEstadoActionPerformed(evt);
            }
        });

        ModificandoMensaje.setText("Actualmente se esta modificando");

        CancelarModificacion.setText("Cancelar");
        CancelarModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarModificacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(211, 211, 211)
                                .addComponent(jLabel1)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CancelarModificacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AgregarZona, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ModificarZona, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CambiarEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ModificandoMensaje)))
                        .addGap(52, 52, 52))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(ModificandoMensaje)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AgregarZona, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ModificarZona, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CancelarModificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CambiarEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtNombreActionPerformed

    private void AgregarZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarZonaActionPerformed
        // TODO add your handling code here:
        if ((jtDescripcion.getText().isEmpty() || jtNombre.getText().isEmpty()) || seEstaModificando){
            JOptionPane.showMessageDialog(null, "Para Agregar Una Zona es necesario tener todos los campos completados y no estar modificando ninguno de ellos");
        } else {
            ZonaData zd = new ZonaData();
            Zona z = new Zona(jtNombre.getText(), jtDescripcion.getText(), true);
            zd.agregarZona(z);
            limpiarCampos();
        }
    }//GEN-LAST:event_AgregarZonaActionPerformed

    private void ModificarZonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarZonaActionPerformed
        // TODO add your handling code here:
        ZonaData zd = new ZonaData();
        Zona z = new Zona((int) modeloTabla.getValueAt(Indice, 0), 
                          jtNombre.getText(), jtDescripcion.getText(),true);
        zd.modificarZona(z);
        limpiarCampos();
    }//GEN-LAST:event_ModificarZonaActionPerformed

    private void jtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtNombreKeyReleased
        // TODO add your handling code here:
        ZonaData zd = new ZonaData();
        List<Zona> lista = new ArrayList();
        if(!seEstaModificando){
            if(jtDescripcion.getText().isEmpty()){
                lista = zd.listarZonasPorNombre(jtNombre.getText());

            } else {
                lista = zd.listarZonasPorNombre_Y_Descripcion(jtNombre.getText(), 
                                                        jtDescripcion.getText());

            }
            cargarTabla(lista);
        }
    }//GEN-LAST:event_jtNombreKeyReleased

    private void jtDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtDescripcionKeyReleased
        // TODO add your handling code here:
        ZonaData zd = new ZonaData();
        List<Zona> lista = new ArrayList();
        if(!seEstaModificando){
            if(jtNombre.getText().isEmpty()){
                lista = zd.listarZonasPorDescripcion(jtDescripcion.getText());

            } else {
                lista = zd.listarZonasPorNombre_Y_Descripcion(jtNombre.getText(), 
                                                        jtDescripcion.getText());

            }
            cargarTabla(lista);
        }
    }//GEN-LAST:event_jtDescripcionKeyReleased

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        int fila = tabla.getSelectedRow();
               
        jtDescripcion.setText((String) modeloTabla.getValueAt(fila, 2));
        jtNombre.setText((String) modeloTabla.getValueAt(fila, 1));
        
        ModificarZona.setEnabled(true);
        CancelarModificacion.setEnabled(true);
        CambiarEstado.setEnabled(true);
        ModificandoMensaje.setVisible(true);
        seEstaModificando = true;
        Indice = fila;
    }//GEN-LAST:event_tablaMouseClicked

    private void CancelarModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarModificacionActionPerformed
        // TODO add your handling code here:
        ModificandoMensaje.setVisible(false);
        ModificarZona.setEnabled(false);
        CambiarEstado.setEnabled(false);
        CancelarModificacion.setEnabled(false);
        seEstaModificando = false;
    }//GEN-LAST:event_CancelarModificacionActionPerformed

    private void CambiarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarEstadoActionPerformed
        // TODO add your handling code here:
        ZonaData zd = new ZonaData();
        if((Boolean) modeloTabla.getValueAt(Indice, 3)){
            zd.darDeBaja((int) modeloTabla.getValueAt(Indice, 0));
        } else {
            zd.habilitarZona((int) modeloTabla.getValueAt(Indice, 0));
        }
            
        limpiarCampos();
    }//GEN-LAST:event_CambiarEstadoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarZona;
    private javax.swing.JButton CambiarEstado;
    private javax.swing.JButton CancelarModificacion;
    private javax.swing.JLabel ModificandoMensaje;
    private javax.swing.JButton ModificarZona;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtDescripcion;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    public void armarTabla(){
        modeloTabla.addColumn("ID");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Localidad");
        modeloTabla.addColumn("Estado");
        tabla.setModel(modeloTabla);
    }

    public void cargarTabla(){
        ZonaData zd = new ZonaData();
        List<Zona> lista = new ArrayList();
        lista = zd.listarZonasPorNombre("");
        for(Zona z : lista){
            modeloTabla.addRow(new Object[]{z.getIdZona(), z.getNombre(),
                                            z.getDescripcion(), z.isEstado()});
        }
    }

    public void cargarTabla(List<Zona> lista){
        modeloTabla.setRowCount(0);
        for(Zona z : lista){
            modeloTabla.addRow(new Object[]{z.getIdZona(), z.getNombre(),
                                            z.getDescripcion(), z.isEstado()});
        }
        if (modeloTabla.getRowCount() == 0){
            AgregarZona.setEnabled(true);
        } else {
            AgregarZona.setEnabled(false);
        }
    }
    
    public void inicializarCampos(){
        AgregarZona.setEnabled(false);
        CambiarEstado.setEnabled(false);
        ModificarZona.setEnabled(false);
        ModificandoMensaje.setVisible(false);
        CancelarModificacion.setEnabled(false);
        seEstaModificando = false;
    }
    
    public void limpiarCampos(){
        modeloTabla.setRowCount(0);
        jtDescripcion.setText("");
        jtNombre.setText("");
        cargarTabla();
        inicializarCampos();
    }







}
